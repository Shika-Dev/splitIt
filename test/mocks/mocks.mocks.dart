// Mocks generated by Mockito 5.4.5 from annotations
// in split_it/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:hive/hive.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:split_it/Data/Datasources/Local/Entities/split_bill_entity.dart'
    as _i9;
import 'package:split_it/Data/Datasources/Local/Entities/summary_entity.dart'
    as _i10;
import 'package:split_it/Data/Datasources/Local/local_datasources.dart' as _i6;
import 'package:split_it/Data/Datasources/Remote/remote_datasources.dart'
    as _i5;
import 'package:split_it/Data/Datasources/Remote/Responses/deepseek_response.dart'
    as _i7;
import 'package:split_it/Data/Repository/split_bill_repository.dart' as _i18;
import 'package:split_it/Domain/Models/bill_item_model.dart' as _i2;
import 'package:split_it/Domain/Models/split_bill_model.dart' as _i3;
import 'package:split_it/Domain/Models/summary_model.dart' as _i4;
import 'package:split_it/Domain/Repository/abs_repository.dart' as _i17;
import 'package:split_it/Domain/Usecases/homepage_usecase.dart' as _i14;
import 'package:split_it/Domain/Usecases/scan_bill_usecase.dart' as _i11;
import 'package:split_it/Domain/Usecases/split_bill_usecase.dart' as _i15;
import 'package:split_it/Domain/Usecases/summary_usecase.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBillItemModel_0 extends _i1.SmartFake implements _i2.BillItemModel {
  _FakeBillItemModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSplitBillModel_1 extends _i1.SmartFake
    implements _i3.SplitBillModel {
  _FakeSplitBillModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSummaryModel_2 extends _i1.SmartFake implements _i4.SummaryModel {
  _FakeSummaryModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteDatasources_3 extends _i1.SmartFake
    implements _i5.RemoteDatasources {
  _FakeRemoteDatasources_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalDatasources_4 extends _i1.SmartFake
    implements _i6.LocalDatasources {
  _FakeLocalDatasources_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeepseekResponse_5 extends _i1.SmartFake
    implements _i7.DeepseekResponse {
  _FakeDeepseekResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBox_6<E> extends _i1.SmartFake implements _i8.Box<E> {
  _FakeBox_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSplitBillEntity_7 extends _i1.SmartFake
    implements _i9.SplitBillEntity {
  _FakeSplitBillEntity_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSummaryEntity_8 extends _i1.SmartFake implements _i10.SummaryEntity {
  _FakeSummaryEntity_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ScanBillUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockScanBillUsecase extends _i1.Mock implements _i11.ScanBillUsecase {
  MockScanBillUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i2.BillItemModel> getBillItems(List<String>? rawOCR) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBillItems,
          [rawOCR],
        ),
        returnValue: _i12.Future<_i2.BillItemModel>.value(_FakeBillItemModel_0(
          this,
          Invocation.method(
            #getBillItems,
            [rawOCR],
          ),
        )),
      ) as _i12.Future<_i2.BillItemModel>);

  @override
  _i12.Future<String> saveBill(_i2.BillItemModel? model) => (super.noSuchMethod(
        Invocation.method(
          #saveBill,
          [model],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #saveBill,
            [model],
          ),
        )),
      ) as _i12.Future<String>);
}

/// A class which mocks [HomepageUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomepageUsecase extends _i1.Mock implements _i14.HomepageUsecase {
  MockHomepageUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<List<_i4.SummaryModel>> getAllSummary() => (super.noSuchMethod(
        Invocation.method(
          #getAllSummary,
          [],
        ),
        returnValue:
            _i12.Future<List<_i4.SummaryModel>>.value(<_i4.SummaryModel>[]),
      ) as _i12.Future<List<_i4.SummaryModel>>);

  @override
  _i12.Future<void> deleteSummary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteSummary,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [SplitBillUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSplitBillUsecase extends _i1.Mock implements _i15.SplitBillUsecase {
  MockSplitBillUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i3.SplitBillModel> getBillDetail(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBillDetail,
          [id],
        ),
        returnValue:
            _i12.Future<_i3.SplitBillModel>.value(_FakeSplitBillModel_1(
          this,
          Invocation.method(
            #getBillDetail,
            [id],
          ),
        )),
      ) as _i12.Future<_i3.SplitBillModel>);

  @override
  _i12.Future<void> deleteBill(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteBill,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String> createSummary(_i4.SummaryModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSummary,
          [model],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #createSummary,
            [model],
          ),
        )),
      ) as _i12.Future<String>);
}

/// A class which mocks [SummaryUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSummaryUsecase extends _i1.Mock implements _i16.SummaryUsecase {
  MockSummaryUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i4.SummaryModel> getSummary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getSummary,
          [id],
        ),
        returnValue: _i12.Future<_i4.SummaryModel>.value(_FakeSummaryModel_2(
          this,
          Invocation.method(
            #getSummary,
            [id],
          ),
        )),
      ) as _i12.Future<_i4.SummaryModel>);
}

/// A class which mocks [AbsSplitBillRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAbsSplitBillRepository extends _i1.Mock
    implements _i17.AbsSplitBillRepository {
  MockAbsSplitBillRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i2.BillItemModel> getBillItemModels(List<String>? rawOcr) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBillItemModels,
          [rawOcr],
        ),
        returnValue: _i12.Future<_i2.BillItemModel>.value(_FakeBillItemModel_0(
          this,
          Invocation.method(
            #getBillItemModels,
            [rawOcr],
          ),
        )),
      ) as _i12.Future<_i2.BillItemModel>);

  @override
  _i12.Future<String> createSplitBillEntity(_i2.BillItemModel? billItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSplitBillEntity,
          [billItem],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #createSplitBillEntity,
            [billItem],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i3.SplitBillModel> getBillDetail(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBillDetail,
          [id],
        ),
        returnValue:
            _i12.Future<_i3.SplitBillModel>.value(_FakeSplitBillModel_1(
          this,
          Invocation.method(
            #getBillDetail,
            [id],
          ),
        )),
      ) as _i12.Future<_i3.SplitBillModel>);

  @override
  _i12.Future<void> deleteBill(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteBill,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String> createSummary(_i4.SummaryModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSummary,
          [model],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #createSummary,
            [model],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i4.SummaryModel> getSummary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getSummary,
          [id],
        ),
        returnValue: _i12.Future<_i4.SummaryModel>.value(_FakeSummaryModel_2(
          this,
          Invocation.method(
            #getSummary,
            [id],
          ),
        )),
      ) as _i12.Future<_i4.SummaryModel>);

  @override
  _i12.Future<List<_i4.SummaryModel>> getAllSummary() => (super.noSuchMethod(
        Invocation.method(
          #getAllSummary,
          [],
        ),
        returnValue:
            _i12.Future<List<_i4.SummaryModel>>.value(<_i4.SummaryModel>[]),
      ) as _i12.Future<List<_i4.SummaryModel>>);

  @override
  _i12.Future<void> deleteSummary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteSummary,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [SplitBillRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockSplitBillRepositoryImpl extends _i1.Mock
    implements _i18.SplitBillRepositoryImpl {
  MockSplitBillRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.RemoteDatasources get remoteDatasources => (super.noSuchMethod(
        Invocation.getter(#remoteDatasources),
        returnValue: _FakeRemoteDatasources_3(
          this,
          Invocation.getter(#remoteDatasources),
        ),
      ) as _i5.RemoteDatasources);

  @override
  _i6.LocalDatasources get localDatasource => (super.noSuchMethod(
        Invocation.getter(#localDatasource),
        returnValue: _FakeLocalDatasources_4(
          this,
          Invocation.getter(#localDatasource),
        ),
      ) as _i6.LocalDatasources);

  @override
  _i12.Future<_i2.BillItemModel> getBillItemModels(List<String>? rawOcr) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBillItemModels,
          [rawOcr],
        ),
        returnValue: _i12.Future<_i2.BillItemModel>.value(_FakeBillItemModel_0(
          this,
          Invocation.method(
            #getBillItemModels,
            [rawOcr],
          ),
        )),
      ) as _i12.Future<_i2.BillItemModel>);

  @override
  _i12.Future<String> createSplitBillEntity(_i2.BillItemModel? billItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSplitBillEntity,
          [billItem],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #createSplitBillEntity,
            [billItem],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i3.SplitBillModel> getBillDetail(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBillDetail,
          [id],
        ),
        returnValue:
            _i12.Future<_i3.SplitBillModel>.value(_FakeSplitBillModel_1(
          this,
          Invocation.method(
            #getBillDetail,
            [id],
          ),
        )),
      ) as _i12.Future<_i3.SplitBillModel>);

  @override
  _i12.Future<void> deleteBill(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteBill,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String> createSummary(_i4.SummaryModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSummary,
          [model],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #createSummary,
            [model],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i4.SummaryModel> getSummary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getSummary,
          [id],
        ),
        returnValue: _i12.Future<_i4.SummaryModel>.value(_FakeSummaryModel_2(
          this,
          Invocation.method(
            #getSummary,
            [id],
          ),
        )),
      ) as _i12.Future<_i4.SummaryModel>);

  @override
  _i12.Future<List<_i4.SummaryModel>> getAllSummary() => (super.noSuchMethod(
        Invocation.method(
          #getAllSummary,
          [],
        ),
        returnValue:
            _i12.Future<List<_i4.SummaryModel>>.value(<_i4.SummaryModel>[]),
      ) as _i12.Future<List<_i4.SummaryModel>>);

  @override
  _i12.Future<void> deleteSummary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteSummary,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [RemoteDatasources].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDatasources extends _i1.Mock implements _i5.RemoteDatasources {
  MockRemoteDatasources() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i7.DeepseekResponse> cleanOCRText(List<String>? rawOcr) =>
      (super.noSuchMethod(
        Invocation.method(
          #cleanOCRText,
          [rawOcr],
        ),
        returnValue:
            _i12.Future<_i7.DeepseekResponse>.value(_FakeDeepseekResponse_5(
          this,
          Invocation.method(
            #cleanOCRText,
            [rawOcr],
          ),
        )),
      ) as _i12.Future<_i7.DeepseekResponse>);
}

/// A class which mocks [LocalDatasources].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDatasources extends _i1.Mock implements _i6.LocalDatasources {
  MockLocalDatasources() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Box<_i9.SplitBillEntity> get splitBillBox => (super.noSuchMethod(
        Invocation.getter(#splitBillBox),
        returnValue: _FakeBox_6<_i9.SplitBillEntity>(
          this,
          Invocation.getter(#splitBillBox),
        ),
      ) as _i8.Box<_i9.SplitBillEntity>);

  @override
  set splitBillBox(_i8.Box<_i9.SplitBillEntity>? _splitBillBox) =>
      super.noSuchMethod(
        Invocation.setter(
          #splitBillBox,
          _splitBillBox,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Box<_i10.SummaryEntity> get summaryBox => (super.noSuchMethod(
        Invocation.getter(#summaryBox),
        returnValue: _FakeBox_6<_i10.SummaryEntity>(
          this,
          Invocation.getter(#summaryBox),
        ),
      ) as _i8.Box<_i10.SummaryEntity>);

  @override
  set summaryBox(_i8.Box<_i10.SummaryEntity>? _summaryBox) =>
      super.noSuchMethod(
        Invocation.setter(
          #summaryBox,
          _summaryBox,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<String> createOrUpdateSplitBill(_i9.SplitBillEntity? splitBill) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrUpdateSplitBill,
          [splitBill],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #createOrUpdateSplitBill,
            [splitBill],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i9.SplitBillEntity> getSplitBill(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSplitBill,
          [id],
        ),
        returnValue:
            _i12.Future<_i9.SplitBillEntity>.value(_FakeSplitBillEntity_7(
          this,
          Invocation.method(
            #getSplitBill,
            [id],
          ),
        )),
      ) as _i12.Future<_i9.SplitBillEntity>);

  @override
  _i12.Future<void> deleteBill(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteBill,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String> createSummary(_i10.SummaryEntity? summary) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSummary,
          [summary],
        ),
        returnValue: _i12.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #createSummary,
            [summary],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i10.SummaryEntity> getSummary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getSummary,
          [id],
        ),
        returnValue: _i12.Future<_i10.SummaryEntity>.value(_FakeSummaryEntity_8(
          this,
          Invocation.method(
            #getSummary,
            [id],
          ),
        )),
      ) as _i12.Future<_i10.SummaryEntity>);

  @override
  _i12.Future<List<_i10.SummaryEntity>> getAllSummary() => (super.noSuchMethod(
        Invocation.method(
          #getAllSummary,
          [],
        ),
        returnValue:
            _i12.Future<List<_i10.SummaryEntity>>.value(<_i10.SummaryEntity>[]),
      ) as _i12.Future<List<_i10.SummaryEntity>>);

  @override
  _i12.Future<void> deleteSummary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteSummary,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}
